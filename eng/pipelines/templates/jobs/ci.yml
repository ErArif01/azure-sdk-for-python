parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: Artifacts
    type: object
    default: []
  - name: TestPipeline
    type: boolean
    default: false
  - name: BeforePublishSteps
    type: object
    default: []
  - name: TestMarkArgument
    type: string
    default: ''
  - name: BeforeTestSteps
    type: object
    default: []
  - name: AfterTestSteps
    type: object
    default: []
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: TestTimeoutInMinutes
    type: number
    default: 60
  - name: ToxEnvParallel
    type: string
    default: '--tenvparallel'
  - name: InjectedPackages
    type: string
    default: ''
  - name: BuildDocs
    type: boolean
    default: true
  - name: DevFeedName
    type: string
    default: 'public/azure-sdk-for-python'
  - name: MatrixConfigs
    type: object
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []
  - name: VerifyAutorest
    type: boolean
    default: false
  - name: ValidateFormatting
    type: boolean
    default: false
  - name: UnsupportedToxEnvironments
    type: string
    default: ''
  - name: TestProxy
    type: boolean
    default: false
  - name: GenerateApiReviewForManualOnly
    type: boolean
    default: false

jobs:
  - job: 'Build'
    timeoutInMinutes: 90
    variables:
      Codeql.Enabled: true
      Codeql.BuildIdentifier: ${{ parameters.ServiceDirectory }}
      Codeql.SkipTaskAutoInjection: false

    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: MMSUbuntu20.04

    steps:
    - template: /eng/pipelines/templates/steps/targeting-string-resolve.yml
      parameters:
        BuildTargetingString: ${{ parameters.BuildTargetingString }}

    - template: ../steps/build-package-artifacts.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BeforePublishSteps: ${{ parameters.BeforePublishSteps }}
        TestPipeline: ${{ parameters.TestPipeline }}
        Artifacts: ${{ parameters.Artifacts }}

  - job: 'Build_Extended'
    displayName: Build Extended
    dependsOn: 
      - 'Build'
    timeoutInMinutes: 90
    variables:
      Codeql.Enabled: true
      Codeql.BuildIdentifier: ${{ parameters.ServiceDirectory }}
      Codeql.SkipTaskAutoInjection: false

    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: MMSUbuntu20.04

    steps:
    - template: /eng/pipelines/templates/steps/targeting-string-resolve.yml
      parameters:
        BuildTargetingString: ${{ parameters.BuildTargetingString }}

  - job: Compliance
    pool:
      name: azsdk-pool-mms-win-2022-general
      vmImage: MMS2022
    steps:
      - template: /eng/common/pipelines/templates/steps/credscan.yml
        parameters:
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          BaselineFilePath: $(Build.SourcesDirectory)\eng\python.gdnbaselines

  - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml
    parameters:
      JobTemplatePath: /eng/pipelines/templates/jobs/ci.tests.yml
      DependsOn:
        - 'Build'
      MatrixConfigs: ${{ parameters.MatrixConfigs }}
      MatrixFilters: ${{ parameters.MatrixFilters }}
      MatrixReplace: ${{ parameters.MatrixReplace }}
      CloudConfig:
        Cloud: Public
      AdditionalParameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        TestPipeline: ${{ parameters.TestPipeline }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}
        BeforeTestSteps: ${{ parameters.BeforeTestSteps }}
        AfterTestSteps: ${{ parameters.AfterTestSteps }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        TestTimeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
        ToxEnvParallel: ${{ parameters.ToxEnvParallel }}
        InjectedPackages: ${{ parameters.InjectedPackages }}
        UnsupportedToxEnvironments: ${{ parameters.UnsupportedToxEnvironments }}
        TestProxy: ${{ parameters.TestProxy }}

  - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml
    parameters:
      JobTemplatePath: /eng/pipelines/templates/jobs/regression.yml
      GenerateJobName: generate_regression_matrix
      SparseCheckoutPaths: [ "scripts/", "sdk/", "tools/azure-sdk-tools/" ]
      MatrixConfigs:
          - Name: Python_regression_envs
            Path: eng/pipelines/templates/stages/regression-job-matrix.json
            Selection: sparse
            GenerateVMJobs: true
      PreGenerationSteps:
        - pwsh: |
            python -m pip install "./tools/azure-sdk-tools[build]"
          displayName: 'Prep Environment'
        - template: /eng/pipelines/templates/steps/targeting-string-resolve.yml
          parameters:
            BuildTargetingString: ${{ parameters.BuildTargetingString }}
        - task: PythonScript@0
          displayName: 'Ensure service coverage'
          inputs:
            scriptPath: '$(Build.SourcesDirectory)/scripts/devops_tasks/update_regression_services.py'
            arguments: >-
              "$(TargetingString)"
              --service="${{ parameters.ServiceDirectory }}"
              --json=$(Build.SourcesDirectory)/eng/pipelines/templates/stages/regression-job-matrix.json
      CloudConfig:
        Cloud: Public
      DependsOn:
        - 'Build'
      AdditionalParameters:
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        TestTimeoutInMinutes: 90
